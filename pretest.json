{
  "version": 2.0,
  "questions": [
    {
      "question": "What is a session cookie used for?",
      "answers": {
        "a": "To store user authentication information",
        "b": "To track user visits to a website",
        "c": "To store website content",
        "d": "To encrypt data on the server"
      },
      "explanations": {
        "a": "A session cookie is used to store information about the userâ€™s session, such as authentication data.<a href='https://www.techtarget.com/searchsecurity/definition/session-cookie'>Learn more</a>",
        "b": "Tracking user visits is often done with tracking cookies, not specifically session cookies.",
        "c": "Session cookies do not store website content.",
        "d": "Session cookies are not used for data encryption."
      },
      "correctAnswer": "a",
      "difficulty": "beginner"
    },
    {
      "question": "What does 'base64 encoding' do to a cookie's data?",
      "answers": {
        "a": "It makes the data readable but not secure",
        "b": "It encrypts the data securely",
        "c": "It compresses the data",
        "d": "It makes the data unusable"
      },
      "explanations": {
        "a": "Base64 encoding makes data readable but does not secure it; it can be easily decoded.<a href='https://www.base64decode.org/'>Learn more</a>",
        "b": "Base64 encoding does not provide security or encryption.",
        "c": "Base64 encoding does not compress data.",
        "d": "Base64 encoding does not make data unusable."
      },
      "correctAnswer": "a",
      "difficulty": "beginner"
    },
    {
      "question": "What should be done to prevent session cookie manipulation?",
      "answers": {
        "a": "Use secure cookie attributes and server-side validation",
        "b": "Allow cookies to be edited by users",
        "c": "Use plain text for cookie storage",
        "d": "Ignore session cookies"
      },
      "explanations": {
        "a": "Using secure cookie attributes and validating session data on the server side can prevent unauthorized access.<a href='https://owasp.org/www-community/HttpOnly'>Learn more</a>",
        "b": "Cookies should not be editable by users to prevent manipulation.",
        "c": "Plain text storage of cookies is insecure.",
        "d": "Session cookies should not be ignored; they are crucial for maintaining session security."
      },
      "correctAnswer": "a",
      "difficulty": "beginner"
    },
    {
      "question": "Which attribute prevents JavaScript from accessing session cookies?",
      "answers": {
        "a": "HttpOnly",
        "b": "Secure",
        "c": "SameSite",
        "d": "Path"
      },
      "explanations": {
        "a": "The HttpOnly attribute prevents JavaScript from accessing cookies, reducing the risk of cross-site scripting (XSS) attacks.<a href='https://owasp.org/www-community/HttpOnly'>Learn more</a>",
        "b": "The Secure attribute ensures cookies are sent only over HTTPS but does not prevent JavaScript access.",
        "c": "SameSite helps prevent cross-site request forgery (CSRF) but does not restrict JavaScript access.",
        "d": "The Path attribute defines where the cookie is valid but does not restrict JavaScript access."
      },
      "correctAnswer": "a",
      "difficulty": "beginner"
    },
    {
      "question": "How can an application prevent session fixation attacks?",
      "answers": {
        "a": "Regenerate session IDs after login",
        "b": "Use predictable session IDs",
        "c": "Allow session IDs to be set manually",
        "d": "Store session IDs in local storage"
      },
      "explanations": {
        "a": "Regenerating session IDs after login prevents attackers from setting a fixed session ID for a victim.<a href='https://owasp.org/www-community/attacks/Session_fixation'>Learn more</a>",
        "b": "Predictable session IDs can be guessed by attackers, making them insecure.",
        "c": "Allowing manual setting of session IDs exposes them to manipulation.",
        "d": "Storing session IDs in local storage makes them vulnerable to cross-site scripting (XSS) attacks."
      },
      "correctAnswer": "a",
      "difficulty": "beginner"
    },
    {
      "question": "Why should the Secure attribute be used with session cookies?",
      "answers": {
        "a": "To ensure cookies are only sent over HTTPS",
        "b": "To prevent JavaScript from accessing cookies",
        "c": "To extend the cookie expiration time",
        "d": "To allow cookies across multiple domains"
      },
      "explanations": {
        "a": "The Secure attribute ensures cookies are only sent over HTTPS, preventing interception over unsecured connections.<a href='https://owasp.org/www-community/controls/SecureCookieAttribute'>Learn more</a>",
        "b": "The HttpOnly attribute prevents JavaScript access, not Secure.",
        "c": "Cookie expiration is controlled by the Expires or Max-Age attributes, not Secure.",
        "d": "Cross-domain cookie behavior is controlled by the Domain attribute, not Secure."
      },
      "correctAnswer": "a",
      "difficulty": "beginner"
    }
  ]
}
